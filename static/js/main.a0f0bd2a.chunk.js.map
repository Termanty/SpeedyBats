{"version":3,"sources":["components/GameOver.js","components/Button.js","components/SpeedButtons.js","components/Control.js","components/Controls.js","components/Stats.js","bg.mp3","firebase.js","App.js","index.js"],"names":["GameOver","handler","score","submit","name","change","className","onSubmit","htmlFor","type","id","onChange","value","onClick","Button","active","btn","classes","console","log","SpeedButtons","Control","btnType","hide","text","toUpperCase","Controls","startHandler","stopHandler","running","results","sort","a","b","slice","map","stat","rank","app","initializeApp","firebaseConfig","db","getFirestore","gameRunnigSound","Audio","bg","App","state","clickcount","moves","showPopUp","clickID","resultsCollectionRef","collection","gameOver","clearTimeout","pause","setState","resetGame","setActive","activity","newArray","run","delay","prevBtn","Math","floor","random","concat","setTimeout","currentTime","play","clickHandler","n","clicks","continueBtnHandler","getResultsFromDB","getDocs","data","docs","doc","addResultToDB","addDoc","date","Timestamp","fromDate","Date","onSubmitHandler","event","preventDefault","e","target","this","Stats","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f0bd2a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GameOver = ({ handler, score, submit, name, change }) => {\n  return (\n    <div>\n      <div className=\"overlay\"></div>\n      <div className=\"game-over\">\n        <h2 className=\"game-over-h2\">GAME OVER</h2>\n        <p>Your score was: {score}</p>\n        <form onSubmit={submit}>\n          <label htmlFor=\"name\">Your nickname </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            onChange={change}\n            value={name}\n          />\n          <input type=\"submit\" value=\"save\" />\n        </form>\n\n        <button className=\"continue\" onClick={handler}>\n          CONTINUE\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import React from \"react\";\n\nconst Button = ({ handler, active, btn }) => {\n  const classes = \"speed-button \" + (active[btn] ? \"glow\" : \"\");\n  console.log(\"button: \" + btn + \", style: \" + classes);\n  return <button className={classes} onClick={() => handler(btn)}></button>;\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst SpeedButtons = ({ handler, active }) => {\n  return (\n    <div className=\"speed-buttons\">\n      <Button handler={handler} active={active} btn={0} />\n      <Button handler={handler} active={active} btn={1} />\n      <Button handler={handler} active={active} btn={2} />\n      <Button handler={handler} active={active} btn={3} />\n    </div>\n  );\n};\n\nexport default SpeedButtons;\n","import React from \"react\";\n\nconst Control = ({ handler, btnType, hide }) => {\n  const classes = `control ${btnType} ${hide ? \"hide\" : \"\"}`;\n  const text = btnType.toUpperCase();\n  return (\n    <button className={classes} onClick={hide ? () => void 0 : handler}>\n      {text}\n    </button>\n  );\n};\n\nexport default Control;\n","import React from \"react\";\nimport Control from \"./Control\";\n\nconst Controls = ({ startHandler, stopHandler, running }) => {\n  return (\n    <div className=\"controls\">\n      <Control\n        handler={startHandler}\n        btnType=\"start\"\n        hide={running ? true : false}\n      />\n      <Control\n        handler={stopHandler}\n        btnType=\"stop\"\n        hide={running ? false : true}\n      />\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\n\nconst GameOver = ({ handler, score, results }) => {\n  function allTimeList() {\n    const ranking = results.sort((a, b) => b.score - a.score).slice(0, 7);\n    return ranking.map((stat, rank) => (\n      <tr key={stat.id}>\n        <td>{rank + 1}</td>\n        <td>{stat.name}</td>\n        <td>{stat.score}</td>\n      </tr>\n    ));\n  }\n\n  return (\n    <div>\n      <div className=\"overlay\"></div>\n      <div className=\"game-over\">\n        <h2 className=\"game-over-h2 stats\">BEST SCORES</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Ranking</th>\n              <th>Player</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>{allTimeList()}</tbody>\n        </table>\n        <button className=\"continue\" onClick={handler}>\n          CONTINUE\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","export default __webpack_public_path__ + \"static/media/bg.e296f1d2.mp3\";","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"@firebase/firestore\";\nimport firebaseConfig from \"./firebase-config.json\";\n\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app);\n","import { Component } from \"react\";\nimport GameOver from \"./components/GameOver\";\nimport SpeedButtons from \"./components/SpeedButtons\";\nimport Controls from \"./components/Controls\";\nimport Stats from \"./components/Stats\";\nimport bg from \"./bg.mp3\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, addDoc, Timestamp } from \"firebase/firestore\";\n\nlet gameRunnigSound = new Audio(bg);\n\nclass App extends Component {\n  state = {\n    running: false,\n    clickcount: 0,\n    moves: [],\n    active: [false, false, false, false],\n    showPopUp: false,\n    results: [],\n    name: \"\",\n  };\n\n  clickID = null;\n  resultsCollectionRef = collection(db, \"results\");\n\n  gameOver = () => {\n    if (this.clickID) clearTimeout(this.clickID);\n    gameRunnigSound.pause();\n    this.setState({ running: false, showPopUp: \"showGameOver\" });\n  };\n\n  resetGame = () => {\n    if (this.clickID) clearTimeout(this.clickID);\n    this.setState({\n      running: false,\n      clickcount: 0,\n      moves: [],\n      showPopUp: false,\n    });\n  };\n\n  setActive = (btn, activity) => {\n    const newArray = this.state.active.slice();\n    newArray[btn] = activity;\n    return newArray;\n  };\n\n  run = (delay, prevBtn = 0) => {\n    if (!this.state.running) return;\n    let btn;\n    do {\n      btn = Math.floor(Math.random() * 4);\n    } while (btn === prevBtn);\n    this.setState({\n      moves: this.state.moves.concat([btn]),\n      active: this.setActive(btn, true),\n    });\n    console.log(btn);\n    console.log(this.state);\n    delay = delay * 0.97;\n    setTimeout(\n      () => this.setState({ active: this.setActive(btn, false) }),\n      delay * 1.8\n    );\n    setTimeout(() => {\n      this.run(delay, btn);\n    }, delay);\n  };\n\n  startHandler = () => {\n    if (this.state.running) return;\n    this.setState({ running: true });\n    gameRunnigSound.currentTime = 0;\n    this.clickID = setTimeout(() => {\n      this.gameOver();\n    }, 4000);\n    setTimeout(() => {\n      gameRunnigSound.play();\n      this.run(1000);\n    }, 500);\n  };\n\n  stopHandler = () => {\n    gameRunnigSound.pause();\n    this.resetGame();\n  };\n\n  clickHandler = (n) => {\n    if (!this.state.running) return;\n    const clicks = this.state.clickcount;\n    if (this.state.moves[clicks] !== n) {\n      this.gameOver();\n      return;\n    }\n    clearTimeout(this.clickID);\n    this.clickID = setTimeout(() => {\n      this.gameOver();\n    }, 4000);\n    this.setState({ clickcount: clicks + 1 });\n  };\n\n  continueBtnHandler = () => {\n    if (this.state.showPopUp === \"showGameOver\") {\n      this.setState({\n        showPopUp: \"showStats\",\n      });\n      return;\n    }\n    this.resetGame();\n  };\n\n  componentDidMount() {\n    this.getResultsFromDB();\n  }\n\n  getResultsFromDB = async () => {\n    const data = await getDocs(this.resultsCollectionRef);\n    this.setState({\n      results: data.docs.map((doc) => ({ ...doc.data(), id: doc.id })),\n    });\n  };\n\n  addResultToDB = async () => {\n    await addDoc(this.resultsCollectionRef, {\n      name: this.state.name,\n      score: this.state.clickcount * 10,\n      date: Timestamp.fromDate(new Date()),\n    });\n    this.getResultsFromDB();\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    this.addResultToDB();\n    this.continueBtnHandler();\n  };\n\n  onChange = (e) => this.setState({ name: e.target.value });\n\n  render() {\n    const score = this.state.clickcount * 10;\n    return (\n      <div className=\"App\">\n        <h1>Speed Game</h1>\n        <h2>Your score is: {score}</h2>\n        <SpeedButtons handler={this.clickHandler} active={this.state.active} />\n        <Controls\n          startHandler={this.startHandler}\n          stopHandler={this.stopHandler}\n          running={this.state.running}\n        />\n\n        {this.state.showPopUp && (\n          <>\n            <div className=\"overlay1\"></div>\n            <div className=\"overlay2\"></div>\n          </>\n        )}\n        {this.state.showPopUp === \"showGameOver\" && (\n          <GameOver\n            handler={this.continueBtnHandler}\n            score={score}\n            results={this.state.results}\n            submit={this.onSubmitHandler}\n            name={this.state.name}\n            change={this.onChange}\n          />\n        )}\n        {this.state.showPopUp === \"showStats\" && (\n          <Stats\n            handler={this.continueBtnHandler}\n            score={score}\n            results={this.state.results}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}