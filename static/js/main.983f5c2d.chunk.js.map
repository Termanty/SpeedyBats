{"version":3,"sources":["components/GameOver.js","components/Button.js","components/SpeedButtons.js","components/Control.js","components/Controls.js","components/Stats.js","firebase.js","App.js","index.js"],"names":["GameOver","handler","score","submit","results","name","change","className","onSubmit","htmlFor","type","id","onChange","value","onClick","Button","active","btn","classes","console","log","SpeedButtons","Control","btnType","text","toUpperCase","Controls","startHandler","stopHandler","map","stat","app","initializeApp","firebaseConfig","db","getFirestore","App","state","running","clickcount","moves","showPopUp","clickID","resultsCollectionRef","collection","gameOver","clearTimeout","setState","resetGame","setActive","activity","newArray","slice","run","delay","prevBtn","Math","floor","random","concat","setTimeout","clickHandler","n","clicks","continueBtnHandler","getResultsFromDB","a","getDocs","data","docs","doc","addResultToDB","addDoc","date","Timestamp","fromDate","Date","onSubmitHandler","event","preventDefault","e","target","this","Stats","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.983f5c2d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst GameOver = ({ handler, score, results, submit, name, change }) => {\n  return (\n    <div>\n      <div className=\"overlay\"></div>\n      <div className=\"game-over\">\n        <h2>GAME OVER</h2>\n        <p>Your score was: {score}</p>\n        <form onSubmit={submit}>\n          <label htmlFor=\"name\">Your nickname </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            onChange={change}\n            value={name}\n          />\n          <input type=\"submit\" value=\"save\" />\n        </form>\n\n        <button className=\"continue\" onClick={handler}>\n          CONTINUE\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import React from \"react\";\n\nconst Button = ({ handler, active, btn }) => {\n  const classes = \"speed-button \" + (active[btn] ? \"glow\" : \"\");\n  console.log(\"button: \" + btn + \", style: \" + classes);\n  return <button className={classes} onClick={() => handler(btn)}></button>;\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\n\nconst SpeedButtons = ({ handler, active }) => {\n  return (\n    <div className=\"speed-buttons\">\n      <Button handler={handler} active={active} btn={0} />\n      <Button handler={handler} active={active} btn={1} />\n      <Button handler={handler} active={active} btn={2} />\n      <Button handler={handler} active={active} btn={3} />\n    </div>\n  );\n};\n\nexport default SpeedButtons;\n","import React from \"react\";\n\nconst Control = ({ handler, btnType }) => {\n  const classes = \"control \" + btnType;\n  const text = btnType.toUpperCase();\n  return (\n    <button className={classes} onClick={handler}>\n      {text}\n    </button>\n  );\n};\n\nexport default Control;\n","import React from \"react\";\nimport Control from \"./Control\";\n\nconst Controls = ({ startHandler, stopHandler }) => {\n  return (\n    <div className=\"controls\">\n      <Control handler={startHandler} btnType=\"start\" />\n      <Control handler={stopHandler} btnType=\"stop\" />\n    </div>\n  );\n};\n\nexport default Controls;\n","import React from \"react\";\n\nconst GameOver = ({ handler, score, results }) => {\n  function allTimeList() {\n    return results.map((stat) => (\n      <tr key={stat.id}>\n        <td>{stat.name}</td>\n        <td>{stat.score}</td>\n      </tr>\n    ));\n  }\n\n  return (\n    <div>\n      <div className=\"overlay\"></div>\n      <div className=\"game-over\">\n        <h2>BEST SCORES</h2>\n        <p>Your score was: {score}</p>\n        <table>\n          <thead>\n            <tr>\n              <th>Player</th>\n              <th>Score</th>\n            </tr>\n          </thead>\n          <tbody>{allTimeList()}</tbody>\n        </table>\n        <button className=\"continue\" onClick={handler}>\n          CONTINUE\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"@firebase/firestore\";\nimport firebaseConfig from \"./firebase-config.json\";\n\nconst app = initializeApp(firebaseConfig);\n\nexport const db = getFirestore(app);\n","import { Component } from \"react\";\nimport GameOver from \"./components/GameOver\";\nimport SpeedButtons from \"./components/SpeedButtons\";\nimport Controls from \"./components/Controls\";\nimport Stats from \"./components/Stats\";\nimport { db } from \"./firebase\";\nimport { collection, getDocs, addDoc, Timestamp } from \"firebase/firestore\";\n\nclass App extends Component {\n  state = {\n    running: false,\n    clickcount: 0,\n    moves: [],\n    active: [false, false, false, false],\n    showPopUp: false,\n    results: [],\n    name: \"\",\n  };\n\n  clickID = null;\n  resultsCollectionRef = collection(db, \"results\");\n\n  gameOver = () => {\n    if (this.clickID) clearTimeout(this.clickID);\n    this.setState({ running: false, showPopUp: \"showGameOver\" });\n  };\n\n  resetGame = () => {\n    if (this.clickID) clearTimeout(this.clickID);\n    this.setState({\n      running: false,\n      clickcount: 0,\n      moves: [],\n      showPopUp: false,\n    });\n  };\n\n  setActive = (btn, activity) => {\n    const newArray = this.state.active.slice();\n    newArray[btn] = activity;\n    return newArray;\n  };\n\n  run = (delay, prevBtn = 0) => {\n    if (!this.state.running) return;\n    let btn;\n    do {\n      btn = Math.floor(Math.random() * 4);\n    } while (btn === prevBtn);\n    this.setState({\n      moves: this.state.moves.concat([btn]),\n      active: this.setActive(btn, true),\n    });\n    console.log(btn);\n    console.log(this.state);\n    delay = delay * 0.9;\n    setTimeout(\n      () => this.setState({ active: this.setActive(btn, false) }),\n      delay * 1.8\n    );\n    setTimeout(() => {\n      this.run(delay, btn);\n    }, 1000);\n  };\n\n  startHandler = () => {\n    if (this.state.running) return;\n    this.setState({ running: true });\n    this.clickID = setTimeout(() => {\n      this.gameOver();\n    }, 4000);\n    setTimeout(() => {\n      this.run(1000);\n    }, 1000);\n  };\n\n  stopHandler = () => {\n    this.resetGame();\n  };\n\n  clickHandler = (n) => {\n    if (!this.state.running) return;\n    const clicks = this.state.clickcount;\n    if (this.state.moves[clicks] !== n) {\n      this.gameOver();\n      return;\n    }\n    clearTimeout(this.clickID);\n    this.clickID = setTimeout(() => {\n      this.gameOver();\n    }, 4000);\n    this.setState({ clickcount: clicks + 1 });\n  };\n\n  continueBtnHandler = () => {\n    if (this.state.showPopUp === \"showGameOver\") {\n      this.setState({\n        showPopUp: \"showStats\",\n      });\n      return;\n    }\n    this.resetGame();\n  };\n\n  componentDidMount() {\n    this.getResultsFromDB();\n  }\n\n  getResultsFromDB = async () => {\n    const data = await getDocs(this.resultsCollectionRef);\n    this.setState({\n      results: data.docs.map((doc) => ({ ...doc.data(), id: doc.id })),\n    });\n  };\n\n  addResultToDB = async () => {\n    await addDoc(this.resultsCollectionRef, {\n      name: this.state.name,\n      score: this.state.clickcount * 10,\n      date: Timestamp.fromDate(new Date()),\n    });\n    this.getResultsFromDB();\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    this.addResultToDB();\n    this.resetGame();\n  };\n\n  onChange = (e) => this.setState({ name: e.target.value });\n\n  render() {\n    const score = this.state.clickcount * 10;\n    return (\n      <div className=\"App\">\n        <h1>Speed Game</h1>\n        <h2>Your score is: {score}</h2>\n        <SpeedButtons handler={this.clickHandler} active={this.state.active} />\n        <Controls\n          startHandler={this.startHandler}\n          stopHandler={this.stopHandler}\n        />\n\n        {this.state.showPopUp && (\n          <>\n            <div className=\"overlay1\"></div>\n            <div className=\"overlay2\"></div>\n          </>\n        )}\n        {this.state.showPopUp === \"showGameOver\" && (\n          <GameOver\n            handler={this.continueBtnHandler}\n            score={score}\n            results={this.state.results}\n            submit={this.onSubmitHandler}\n            name={this.state.name}\n            change={this.onChange}\n          />\n        )}\n        {this.state.showPopUp === \"showStats\" && (\n          <Stats\n            handler={this.continueBtnHandler}\n            score={score}\n            results={this.state.results}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}